---
jobs:
- name: push-deployer-account-broker-staging
  plan:
  - aggregate:
    - get: broker-src
      trigger: true
    - get: pipeline-tasks
  - put: broker-deploy-staging
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: {{uaa-address-staging}}
        UAA_CLIENT_ID: {{uaa-client-id-staging}}
        UAA_CLIENT_SECRET: {{uaa-client-secret-staging}}
        UAA_ZONE: {{uaa-zone-staging}}
        CF_ADDRESS: {{cf-api-url-staging}}
        CF_AUTH_ADDRESS: {{cf-auth-address-staging}}
        CF_TOKEN_ADDRESS: {{cf-token-address-staging}}
        CF_USERNAME: {{cf-username-staging}}
        CF_PASSWORD: {{cf-password-staging}}
        BROKER_USERNAME: {{broker-username-staging}}
        BROKER_PASSWORD: {{broker-password-staging}}
        EMAIL_ADDRESS: {{email-address-staging}}
        FUGACIOUS_ADDRESS: {{fugacious-address-staging}}
  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: {{cf-api-url-staging}}
      CF_USERNAME: {{cf-deploy-username-staging}}
      CF_PASSWORD: {{cf-deploy-password-staging}}
      CF_ORGANIZATION: {{cf-organization-staging}}
      CF_SPACE: {{cf-space-staging}}
      BROKER_NAME: deployer-account-broker
      AUTH_USER: {{broker-username-staging}}
      AUTH_PASS: {{broker-password-staging}}
      SERVICES: deployer-account
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy deployer-account-broker on {{cf-api-url-staging}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed deployer-account-broker on {{cf-api-url-staging}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: push-deployer-account-broker-production
  plan:
  - aggregate:
    - get: broker-src
      passed: [push-deployer-account-broker-staging]
      trigger: true
    - get: pipeline-tasks
      passed: [push-deployer-account-broker-staging]
  - put: broker-deploy-production
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: {{uaa-address-production}}
        UAA_CLIENT_ID: {{uaa-client-id-production}}
        UAA_CLIENT_SECRET: {{uaa-client-secret-production}}
        UAA_ZONE: {{uaa-zone-production}}
        CF_ADDRESS: {{cf-api-url-production}}
        CF_AUTH_ADDRESS: {{cf-auth-address-production}}
        CF_TOKEN_ADDRESS: {{cf-token-address-production}}
        CF_USERNAME: {{cf-username-production}}
        CF_PASSWORD: {{cf-password-production}}
        BROKER_USERNAME: {{broker-username-production}}
        BROKER_PASSWORD: {{broker-password-production}}
        EMAIL_ADDRESS: {{email-address-production}}
        FUGACIOUS_ADDRESS: {{fugacious-address-production}}
  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: {{cf-api-url-production}}
      CF_USERNAME: {{cf-deploy-username-production}}
      CF_PASSWORD: {{cf-deploy-password-production}}
      CF_ORGANIZATION: {{cf-organization-production}}
      CF_SPACE: {{cf-space-production}}
      BROKER_NAME: deployer-account-broker
      AUTH_USER: {{broker-username-production}}
      AUTH_PASS: {{broker-password-production}}
      SERVICES: deployer-account
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy deployer-account-broker on {{cf-api-url-production}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed deployer-account-broker on {{cf-api-url-production}}
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: broker-src
  type: git
  source:
    uri: {{deployer-account-broker-git-url}}
    branch: {{deployer-account-broker-git-branch}}

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: broker-deploy-staging
  type: cf
  source:
    api: {{cf-api-url-staging}}
    username: {{cf-deploy-username-staging}}
    password: {{cf-deploy-password-staging}}
    organization: {{cf-organization-staging}}
    space: {{cf-space-staging}}

- name: broker-deploy-production
  type: cf
  source:
    api: {{cf-api-url-production}}
    username: {{cf-deploy-username-production}}
    password: {{cf-deploy-password-production}}
    organization: {{cf-organization-production}}
    space: {{cf-space-production}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
